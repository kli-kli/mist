#!/usr/bin/env bash

name=""
context=""
config=""
java_args=""
jar=""

while [[ $# > 1 ]]
do
  key="$1"
  case ${key} in
    --name)
      name="$2"
      shift
      ;;

    --context)
      context="$2"
      shift
      ;;

    --config)
      config="$2"
      shift
      ;;

    --jar)
      jar="$2"
      shift
      ;;

    --run-options)
      run_options="$2"
      shift
      ;;

    --java-args)
      java_args="$2"
      shift
      ;;

    --docker-host)
      docker_host="$2"
      shift
      ;;

    --docker-port)
      docker_port="$2"
      shift
      ;;
  esac
shift
done

if [ "${docker_host}" == 'localhost' ] || [ "${docker_host}" == '127.0.0.1' ]
then
    export socket="--unix-socket /var/run/docker.sock"
fi

parentContainer=`curl -s -X GET $socket -H "Content-Type: application/json" http://${docker_host}:${docker_port}/containers/$HOSTNAME/json`
name=`echo $parentContainer | jq -r '.Name'`
image=`echo $parentContainer | jq -r '.Config.Image'`
links="[\"$name:/master\"]"
labels=`echo $parentContainer | jq -r '.Config.Labels'`
config=`base64 -w 0 configs/docker.conf`
request="{
    \"Image\":\"$image\",
    \"Cmd\": [
        \"worker\",
        \"$namespace\",
        \"$config\",
        \"${run_options}\"
    ],
    \"Labels\": $labels,
    \"HostConfig\": {
        \"Links\": $links
    }
}"

echo $request
containerId=`curl -s -X POST $socket -H "Content-Type: application/json" http://${docker_host}:${docker_port}/containers/create -d "$request" | jq -r '.Id'`
curl -s -X POST $socket -H "Content-Type: application/json" http://${docker_host}:${docker_port}/containers/${containerId}/start
